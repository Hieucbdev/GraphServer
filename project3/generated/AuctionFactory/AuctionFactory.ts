// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AuctionCreated extends ethereum.Event {
  get params(): AuctionCreated__Params {
    return new AuctionCreated__Params(this);
  }
}

export class AuctionCreated__Params {
  _event: AuctionCreated;

  constructor(event: AuctionCreated) {
    this._event = event;
  }

  get auction(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get auctionType(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AuctionFinalized extends ethereum.Event {
  get params(): AuctionFinalized__Params {
    return new AuctionFinalized__Params(this);
  }
}

export class AuctionFinalized__Params {
  _event: AuctionFinalized;

  constructor(event: AuctionFinalized) {
    this._event = event;
  }

  get auction(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get auctionType(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BidAuction extends ethereum.Event {
  get params(): BidAuction__Params {
    return new BidAuction__Params(this);
  }
}

export class BidAuction__Params {
  _event: BidAuction;

  constructor(event: BidAuction) {
    this._event = event;
  }

  get auction(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get auctionType(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get bidder(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RevealAuction extends ethereum.Event {
  get params(): RevealAuction__Params {
    return new RevealAuction__Params(this);
  }
}

export class RevealAuction__Params {
  _event: RevealAuction;

  constructor(event: RevealAuction) {
    this._event = event;
  }

  get auction(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get auctionType(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get revealer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get actualAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RevealStarted extends ethereum.Event {
  get params(): RevealStarted__Params {
    return new RevealStarted__Params(this);
  }
}

export class RevealStarted__Params {
  _event: RevealStarted;

  constructor(event: RevealStarted) {
    this._event = event;
  }

  get auction(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get auctionType(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UpdateAuction extends ethereum.Event {
  get params(): UpdateAuction__Params {
    return new UpdateAuction__Params(this);
  }
}

export class UpdateAuction__Params {
  _event: UpdateAuction;

  constructor(event: UpdateAuction) {
    this._event = event;
  }

  get auction(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get auctionType(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AuctionFactory__englishAdminParamsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getMinimumRemainingTime(): BigInt {
    return this.value0;
  }

  getFeePercent(): BigInt {
    return this.value1;
  }
}

export class AuctionFactory__vickreyAdminParamsResult {
  value0: BigInt;
  value1: BigInt;
  value2: Address;

  constructor(value0: BigInt, value1: BigInt, value2: Address) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    return map;
  }

  getMininumBidDuration(): BigInt {
    return this.value0;
  }

  getMinimumRevealDuration(): BigInt {
    return this.value1;
  }

  getVICKREY_UTILITIES(): Address {
    return this.value2;
  }
}

export class AuctionFactory extends ethereum.SmartContract {
  static bind(address: Address): AuctionFactory {
    return new AuctionFactory("AuctionFactory", address);
  }

  WETH_ADDRESS(): Address {
    let result = super.call("WETH_ADDRESS", "WETH_ADDRESS():(address)", []);

    return result[0].toAddress();
  }

  try_WETH_ADDRESS(): ethereum.CallResult<Address> {
    let result = super.tryCall("WETH_ADDRESS", "WETH_ADDRESS():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  auctionImplementation(param0: i32): Address {
    let result = super.call(
      "auctionImplementation",
      "auctionImplementation(uint8):(address)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))],
    );

    return result[0].toAddress();
  }

  try_auctionImplementation(param0: i32): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "auctionImplementation",
      "auctionImplementation(uint8):(address)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  englishAdminParams(): AuctionFactory__englishAdminParamsResult {
    let result = super.call(
      "englishAdminParams",
      "englishAdminParams():(uint256,uint256)",
      [],
    );

    return new AuctionFactory__englishAdminParamsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_englishAdminParams(): ethereum.CallResult<AuctionFactory__englishAdminParamsResult> {
    let result = super.tryCall(
      "englishAdminParams",
      "englishAdminParams():(uint256,uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AuctionFactory__englishAdminParamsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
      ),
    );
  }

  isLocked(): boolean {
    let result = super.call("isLocked", "isLocked():(bool)", []);

    return result[0].toBoolean();
  }

  try_isLocked(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isLocked", "isLocked():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  onERC1155BatchReceived(
    operator: Address,
    param1: Address,
    ids: Array<BigInt>,
    values: Array<BigInt>,
    _data: Bytes,
  ): Bytes {
    let result = super.call(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigIntArray(ids),
        ethereum.Value.fromUnsignedBigIntArray(values),
        ethereum.Value.fromBytes(_data),
      ],
    );

    return result[0].toBytes();
  }

  try_onERC1155BatchReceived(
    operator: Address,
    param1: Address,
    ids: Array<BigInt>,
    values: Array<BigInt>,
    _data: Bytes,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigIntArray(ids),
        ethereum.Value.fromUnsignedBigIntArray(values),
        ethereum.Value.fromBytes(_data),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC1155Received(
    operator: Address,
    param1: Address,
    id: BigInt,
    value: BigInt,
    _data: Bytes,
  ): Bytes {
    let result = super.call(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(id),
        ethereum.Value.fromUnsignedBigInt(value),
        ethereum.Value.fromBytes(_data),
      ],
    );

    return result[0].toBytes();
  }

  try_onERC1155Received(
    operator: Address,
    param1: Address,
    id: BigInt,
    value: BigInt,
    _data: Bytes,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(id),
        ethereum.Value.fromUnsignedBigInt(value),
        ethereum.Value.fromBytes(_data),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC721Received(
    operator: Address,
    param1: Address,
    _tokenId: BigInt,
    _data: Bytes,
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromBytes(_data),
      ],
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    operator: Address,
    param1: Address,
    _tokenId: BigInt,
    _data: Bytes,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromBytes(_data),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ongoingAuction(param0: Address): boolean {
    let result = super.call(
      "ongoingAuction",
      "ongoingAuction(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBoolean();
  }

  try_ongoingAuction(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "ongoingAuction",
      "ongoingAuction(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  vickreyAdminParams(): AuctionFactory__vickreyAdminParamsResult {
    let result = super.call(
      "vickreyAdminParams",
      "vickreyAdminParams():(uint256,uint256,address)",
      [],
    );

    return new AuctionFactory__vickreyAdminParamsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toAddress(),
    );
  }

  try_vickreyAdminParams(): ethereum.CallResult<AuctionFactory__vickreyAdminParamsResult> {
    let result = super.tryCall(
      "vickreyAdminParams",
      "vickreyAdminParams():(uint256,uint256,address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AuctionFactory__vickreyAdminParamsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toAddress(),
      ),
    );
  }
}

export class BidAuctionInFactoryCall extends ethereum.Call {
  get inputs(): BidAuctionInFactoryCall__Inputs {
    return new BidAuctionInFactoryCall__Inputs(this);
  }

  get outputs(): BidAuctionInFactoryCall__Outputs {
    return new BidAuctionInFactoryCall__Outputs(this);
  }
}

export class BidAuctionInFactoryCall__Inputs {
  _call: BidAuctionInFactoryCall;

  constructor(call: BidAuctionInFactoryCall) {
    this._call = call;
  }

  get auctionType(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get bidder(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class BidAuctionInFactoryCall__Outputs {
  _call: BidAuctionInFactoryCall;

  constructor(call: BidAuctionInFactoryCall) {
    this._call = call;
  }
}

export class FinalizeAuctionInFactoryCall extends ethereum.Call {
  get inputs(): FinalizeAuctionInFactoryCall__Inputs {
    return new FinalizeAuctionInFactoryCall__Inputs(this);
  }

  get outputs(): FinalizeAuctionInFactoryCall__Outputs {
    return new FinalizeAuctionInFactoryCall__Outputs(this);
  }
}

export class FinalizeAuctionInFactoryCall__Inputs {
  _call: FinalizeAuctionInFactoryCall;

  constructor(call: FinalizeAuctionInFactoryCall) {
    this._call = call;
  }

  get auctionType(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FinalizeAuctionInFactoryCall__Outputs {
  _call: FinalizeAuctionInFactoryCall;

  constructor(call: FinalizeAuctionInFactoryCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get auctionType(): Array<i32> {
    return this._call.inputValues[0].value.toI32Array();
  }

  get auctionData(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _englishAdminParams(): InitializeCall_englishAdminParamsStruct {
    return changetype<InitializeCall_englishAdminParamsStruct>(
      this._call.inputValues[2].value.toTuple(),
    );
  }

  get _vickreyAdminParams(): InitializeCall_vickreyAdminParamsStruct {
    return changetype<InitializeCall_vickreyAdminParamsStruct>(
      this._call.inputValues[3].value.toTuple(),
    );
  }

  get _WETH_ADDRESS(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall_englishAdminParamsStruct extends ethereum.Tuple {
  get minimumRemainingTime(): BigInt {
    return this[0].toBigInt();
  }

  get feePercent(): BigInt {
    return this[1].toBigInt();
  }
}

export class InitializeCall_vickreyAdminParamsStruct extends ethereum.Tuple {
  get mininumBidDuration(): BigInt {
    return this[0].toBigInt();
  }

  get minimumRevealDuration(): BigInt {
    return this[1].toBigInt();
  }

  get VICKREY_UTILITIES(): Address {
    return this[2].toAddress();
  }
}

export class OnERC1155BatchReceivedCall extends ethereum.Call {
  get inputs(): OnERC1155BatchReceivedCall__Inputs {
    return new OnERC1155BatchReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155BatchReceivedCall__Outputs {
    return new OnERC1155BatchReceivedCall__Outputs(this);
  }
}

export class OnERC1155BatchReceivedCall__Inputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155BatchReceivedCall__Outputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class OnERC1155ReceivedCall extends ethereum.Call {
  get inputs(): OnERC1155ReceivedCall__Inputs {
    return new OnERC1155ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155ReceivedCall__Outputs {
    return new OnERC1155ReceivedCall__Outputs(this);
  }
}

export class OnERC1155ReceivedCall__Inputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155ReceivedCall__Outputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class OnERC721ReceivedCall extends ethereum.Call {
  get inputs(): OnERC721ReceivedCall__Inputs {
    return new OnERC721ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC721ReceivedCall__Outputs {
    return new OnERC721ReceivedCall__Outputs(this);
  }
}

export class OnERC721ReceivedCall__Inputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class OnERC721ReceivedCall__Outputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RevealAuctionInFactoryCall extends ethereum.Call {
  get inputs(): RevealAuctionInFactoryCall__Inputs {
    return new RevealAuctionInFactoryCall__Inputs(this);
  }

  get outputs(): RevealAuctionInFactoryCall__Outputs {
    return new RevealAuctionInFactoryCall__Outputs(this);
  }
}

export class RevealAuctionInFactoryCall__Inputs {
  _call: RevealAuctionInFactoryCall;

  constructor(call: RevealAuctionInFactoryCall) {
    this._call = call;
  }

  get auctionType(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get revealer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get actualAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class RevealAuctionInFactoryCall__Outputs {
  _call: RevealAuctionInFactoryCall;

  constructor(call: RevealAuctionInFactoryCall) {
    this._call = call;
  }
}

export class SetAuctionImplementationCall extends ethereum.Call {
  get inputs(): SetAuctionImplementationCall__Inputs {
    return new SetAuctionImplementationCall__Inputs(this);
  }

  get outputs(): SetAuctionImplementationCall__Outputs {
    return new SetAuctionImplementationCall__Outputs(this);
  }
}

export class SetAuctionImplementationCall__Inputs {
  _call: SetAuctionImplementationCall;

  constructor(call: SetAuctionImplementationCall) {
    this._call = call;
  }

  get index(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _auctionAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetAuctionImplementationCall__Outputs {
  _call: SetAuctionImplementationCall;

  constructor(call: SetAuctionImplementationCall) {
    this._call = call;
  }
}

export class SetEnglishAdminParamsCall extends ethereum.Call {
  get inputs(): SetEnglishAdminParamsCall__Inputs {
    return new SetEnglishAdminParamsCall__Inputs(this);
  }

  get outputs(): SetEnglishAdminParamsCall__Outputs {
    return new SetEnglishAdminParamsCall__Outputs(this);
  }
}

export class SetEnglishAdminParamsCall__Inputs {
  _call: SetEnglishAdminParamsCall;

  constructor(call: SetEnglishAdminParamsCall) {
    this._call = call;
  }

  get _englishAdminParams(): SetEnglishAdminParamsCall_englishAdminParamsStruct {
    return changetype<SetEnglishAdminParamsCall_englishAdminParamsStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class SetEnglishAdminParamsCall__Outputs {
  _call: SetEnglishAdminParamsCall;

  constructor(call: SetEnglishAdminParamsCall) {
    this._call = call;
  }
}

export class SetEnglishAdminParamsCall_englishAdminParamsStruct extends ethereum.Tuple {
  get minimumRemainingTime(): BigInt {
    return this[0].toBigInt();
  }

  get feePercent(): BigInt {
    return this[1].toBigInt();
  }
}

export class SetVickreyAdminParamsCall extends ethereum.Call {
  get inputs(): SetVickreyAdminParamsCall__Inputs {
    return new SetVickreyAdminParamsCall__Inputs(this);
  }

  get outputs(): SetVickreyAdminParamsCall__Outputs {
    return new SetVickreyAdminParamsCall__Outputs(this);
  }
}

export class SetVickreyAdminParamsCall__Inputs {
  _call: SetVickreyAdminParamsCall;

  constructor(call: SetVickreyAdminParamsCall) {
    this._call = call;
  }

  get _vickreyAdminParams(): SetVickreyAdminParamsCall_vickreyAdminParamsStruct {
    return changetype<SetVickreyAdminParamsCall_vickreyAdminParamsStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class SetVickreyAdminParamsCall__Outputs {
  _call: SetVickreyAdminParamsCall;

  constructor(call: SetVickreyAdminParamsCall) {
    this._call = call;
  }
}

export class SetVickreyAdminParamsCall_vickreyAdminParamsStruct extends ethereum.Tuple {
  get mininumBidDuration(): BigInt {
    return this[0].toBigInt();
  }

  get minimumRevealDuration(): BigInt {
    return this[1].toBigInt();
  }

  get VICKREY_UTILITIES(): Address {
    return this[2].toAddress();
  }
}

export class StartRevealAuctionInFactoryCall extends ethereum.Call {
  get inputs(): StartRevealAuctionInFactoryCall__Inputs {
    return new StartRevealAuctionInFactoryCall__Inputs(this);
  }

  get outputs(): StartRevealAuctionInFactoryCall__Outputs {
    return new StartRevealAuctionInFactoryCall__Outputs(this);
  }
}

export class StartRevealAuctionInFactoryCall__Inputs {
  _call: StartRevealAuctionInFactoryCall;

  constructor(call: StartRevealAuctionInFactoryCall) {
    this._call = call;
  }

  get auctionType(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class StartRevealAuctionInFactoryCall__Outputs {
  _call: StartRevealAuctionInFactoryCall;

  constructor(call: StartRevealAuctionInFactoryCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseContractCall extends ethereum.Call {
  get inputs(): UnpauseContractCall__Inputs {
    return new UnpauseContractCall__Inputs(this);
  }

  get outputs(): UnpauseContractCall__Outputs {
    return new UnpauseContractCall__Outputs(this);
  }
}

export class UnpauseContractCall__Inputs {
  _call: UnpauseContractCall;

  constructor(call: UnpauseContractCall) {
    this._call = call;
  }
}

export class UnpauseContractCall__Outputs {
  _call: UnpauseContractCall;

  constructor(call: UnpauseContractCall) {
    this._call = call;
  }
}

export class UpdateAuctionInFactoryCall extends ethereum.Call {
  get inputs(): UpdateAuctionInFactoryCall__Inputs {
    return new UpdateAuctionInFactoryCall__Inputs(this);
  }

  get outputs(): UpdateAuctionInFactoryCall__Outputs {
    return new UpdateAuctionInFactoryCall__Outputs(this);
  }
}

export class UpdateAuctionInFactoryCall__Inputs {
  _call: UpdateAuctionInFactoryCall;

  constructor(call: UpdateAuctionInFactoryCall) {
    this._call = call;
  }

  get auctionType(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateAuctionInFactoryCall__Outputs {
  _call: UpdateAuctionInFactoryCall;

  constructor(call: UpdateAuctionInFactoryCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get receiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
